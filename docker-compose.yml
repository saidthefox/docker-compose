version: "3.2"

services:

  mariadb:
    image: mariadb:10
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - "mariadb-data:/var/lib/mysql"
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  redis:
    image: redis:5-alpine
    restart: always
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  traefik:
    image: traefik:2.2
    restart: always
    command:
      - --log.level=INFO
      - --api=true
      - --api.dashboard=${APP_DEBUG}
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
       ACME
      - --certificatesresolvers.primary.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.primary.acme.storage=acme.json
      - --certificatesresolvers.primary.acme.httpchallenge.entrypoint=web
    ports:
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certResolver=primary"
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  seat-web:
    image: eveseat/seat:4
    restart: always
    command: web
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seat-web.rule=Host(`${SEAT_SUBDOMAIN}.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.seat-web.entrypoints=websecure"
      - "traefik.http.routers.seat-web.tls.certResolver=primary"
    depends_on:
      - mariadb
      - redis
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  seat-worker:
    image: eveseat/seat:4
    restart: always
    command: worker
    env_file:
      - .env
    depends_on:
      - seat-web
      - mariadb
      - redis
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"

  seat-cron:
    image: eveseat/seat:4
    restart: always
    command: cron
    env_file:
      - .env
    depends_on:
      - seat-web
      - mariadb
      - redis
    networks:
      - seat-network
    logging:
      driver: "json-file"
      options:
        max-size: "10Mb"
        max-file: "5"
  
  saidthefox.js:
    build:
      context: ./saidthefox.com
      dockerfile: Dockerfile-saidthefoxjs
    container_name: saidthefox.js
    command: npm start
    ports:
      -  "3006:3006"
    networks:
      - seat-network

  saidthefox.com:
    build:
      context: ./saidthefox.com-nginx-docker
      dockerfile: Dockerfile-saidthefox-nginx
    container_name: saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.saidthefox.rule=Host(`saidthefox.com`)"
     - "traefik.http.routers.saidthefox.entrypoints=websecure"
     - "traefik.http.routers.saidthefox.tls.certresolver=primary"
    networks:
     - seat-network

  live.js:
    build:
      context: ./live.saidthefox.com
      dockerfile: Dockerfile-livejs
    container_name: live.js
    command: node main.js
    volumes:
      - /usr/app/node_modules
      - /usr/app/html
    ports:
      - "3001:3001"
    networks:
      - seat-network

  live.saidthefox.com:
    build:
      context: ./live.saidthefox.com-nginx-docker
      dockerfile: Dockerfile-live.nginx
    container_name: live.saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.live.rule=Host(`live.saidthefox.com`)"
     - "traefik.http.routers.live.entrypoints=websecure"
     - "traefik.http.routers.live.tls.certresolver=primary"
    networks:
     - seat-network

  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: unless-stopped
    networks:
      - seat-network
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.gitlab.entrypoints=websecure"
     - "traefik.http.routers.gitlab.rule=Host(`gitlab.saidthefox.com`)"
     - "traefik.http.services.gitlab.loadbalancer.server.scheme=http"
     - "traefik.http.services.gitlab.loadbalancer.server.port=80"
     - "traefik.http.routers.gitlab.tls.certResolver=primary"
    volumes:
     - "/opt/gitlab/config:/etc/gitlab"
     - "/opt/gitlab/data:/var/opt/gitlab"
     - "/opt/gitlab/logs:/var/log/gitlab"
    ports:
     - "223:22"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.saidthefox.com'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        gitlab_rails['gitlab_shell_ssh_port'] = 223
        nginx['redirect_http_to_https'] = false
        nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }

  chowdown:
    build:
      context: ./chowdown
      dockerfile: Dockerfile-chowdown
    restart: unless-stopped
    container_name: chowdown
    networks:
     - seat-network
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.chowdown.entrypoints=websecure"
     - "traefik.http.routers.chowdown.rule=Host(`chowdown.saidthefox.com`)"
     - "traefik.http.routers.chowdown.tls.certResolver=primary"
  
  brandon:
    build:
      context: ./brandon.saidthefox.com
      dockerfile: Dockerfile-brandon
    container_name: brandon.saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.brandon.rule=Host(`brandon.saidthefox.com`)"
     - "traefik.http.routers.brandon.entrypoints=websecure"
     - "traefik.http.routers.brandon.tls.certresolver=primary"
    networks:
     - seat-network

  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    environment:
      - TZ=America/Chicago                                                                
      - PLEX_CLAIM=claim-DNqZKZ1nHeyWcZgDXsym
      - ADVERTISE_IP=https://plex.saidthefox.com:443
      - PLEX_UID=${USER}
      - PLEX_GID=${USER}                                                                  
      - VERSION=docker
    volumes:
      - /opt/plex/config:/config
      - /opt/plex/transcode:/transcode
      - /media/Movies:/data
    hostname: plex.saidthefox.com
    ports:
     - 32400:32400/tcp
     - 32400:32400/udp
     - 3005:3005/tcp
     - 8324:8324/tcp
     - 32469:32469/tcp
     - 1900:1900/udp
     - 32410:32410/udp
     - 32412:32412/udp
     - 32413:32413/udp
     - 32414:32414/udp
    restart: always
    networks:
     - seat-network
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.plex.rule=Host(`plex.saidthefox.com`)"
     - "traefik.http.routers.plex.entrypoints=websecure"
     - "traefik.http.routers.plex.tls.certresolver=primary"
     - "traefik.http.services.plex.loadbalancer.server.port=32400"

  book.js:
    build:
      context: ./book.saidthefox.com
      dockerfile: Dockerfile-bookjs
    container_name: book.js
    command: npm start
    ports:
      - "1234:1234"
    networks:
      - seat-network

  book.saidthefox.com:
    build:
      context: ./book.saidthefox.com-nginx-docker
      dockerfile: Dockerfile-book.nginx
    container_name: book.saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.book.rule=Host(`book.saidthefox.com`)"
     - "traefik.http.routers.book.entrypoints=websecure"
     - "traefik.http.routers.book.tls.certresolver=primary"
    networks:
     - seat-network
  db:
    image: postgres:11-alpine
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: wikijsrocks
      POSTGRES_USER: wikijs
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - seat-network

  wiki:
    image: requarks/wiki:latest
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: wikijsrocks
      DB_NAME: wiki
    ports:
      - "3000:3000"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wiki.rule=Host(`wiki.saidthefox.com`)"
      - "traefik.http.routers.wiki.tls=true"
      - "traefik.http.routers.wiki.tls.certResolver=primary"
      - "traefik.http.routers.wiki.entrypoints=websecure"
      - "traefik.http.services.wiki.loadbalancer.server.port=3000"
    networks:
     - seat-network

  brandonisgey.js:
    build:
      context: ./brandonisgey.saidthefox.com
      dockerfile: Dockerfile-brandonisgeyjs
    container_name: brandonisgey.js
    command: npm start
    ports:
      -  "3007:3007"
    networks:
      - seat-network

  brandonisgey.saidthefox.com:
    build:
      context: ./brandonisgey-nginx-docker
      dockerfile: Dockerfile-brandonisgey-nginx
    container_name: brandonisgey.saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.brandonisgey.rule=Host(`brandonisgey.saidthefox.com`)"
     - "traefik.http.routers.brandonisgey.entrypoints=websecure"
     - "traefik.http.routers.brandonisgey.tls.certresolver=primary"
    networks:
     - seat-network

  tree.js:
    build:
      context: ./tree.saidthefox.com
      dockerfile: Dockerfile-treejs
    container_name: tree.js
    command: npm start
    environment:
      - CONNECTIONSTRING=mongodb://mongo:27017/notes
    ports:
      -  "3008:3008"
    networks:
      - seat-network

  tree.saidthefox.com:
    build:
      context: ./tree.saidthefox.com-nginx-docker
      dockerfile: Dockerfile-tree-nginx
    container_name: tree.saidthefox.com
    expose:
     - 80
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.tree.rule=Host(`tree.saidthefox.com`)"
     - "traefik.http.routers.tree.entrypoints=websecure"
     - "traefik.http.routers.tree.tls.certresolver=primary"
    networks:
     - seat-network

  mongo:
    image: mongo:4.2.8
    ports:
     - 27017:27017
    volumes:
     - mongodb:/data/db
     - mongodb_config:/data/configdb
    networks:
     - seat-network

  teamspeak:
    image: teamspeak
    restart: always
    ports:
      - 9987:9987/udp
      - 10011:10011
      - 30033:30033
    environment:
      TS3SERVER_DB_PLUGIN: ts3db_mariadb
      TS3SERVER_DB_SQLCREATEPATH: create_mariadb
      TS3SERVER_DB_HOST: tsdb
      TS3SERVER_DB_USER: root
      TS3SERVER_DB_PASSWORD: prettyboysarepretty
      TS3SERVER_DB_NAME: teamspeak
      TS3SERVER_DB_WAITUNTILREADY: 30
      TS3SERVER_LICENSE: accept
  tsdb:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: prettyboysarepretty
      MYSQL_DATABASE: teamspeak

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer_data:/data
    networks: 
      - seat-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.saidthefox.com`)"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.routers.portainer-secure.tls.certresolver=primary"


volumes:
    mariadb-data:
    portainer_data:
    db-data:
    mongodb:
    mongodb_config:
networks:
    seat-network:
